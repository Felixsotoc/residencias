{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEnB;;;AAEpC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6CAAS;KACrB;CACF,CAAC;AAMK,MAAM,sBAAsB;;4FAAtB,sBAAsB;mHAAtB,sBAAsB;uHAHxB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,sBAAsB,oFAFvB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACbuB;AACF;AACA;AAET;AAC4B;;AAazD,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAVb;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;mIAKU,WAAW,mBAHpB,6CAAS,aANT,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,yEAAsB;;;;;;;;;;;;;;;;;;;;ACXe;AAEY;;;;;;AAW9C,MAAM,SAAS;IAIpB,YACS,QAAkB,EAClB,MAAc;QADd,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QALvB,UAAK,GAAgB,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QACpD,cAAS,GAAG,KAAK,CAAC;IAKd,CAAC;IAEL,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;SACjD;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;;kEApBU,SAAS;uGAAT,SAAS;;QCftB,6EAAY;QACV,8EAAa;QACX,iFAA0B;QACxB,6EAAmC;QACrC,4DAAc;QAEd,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC9B,4DAAc;QAChB,4DAAa;QAEb,8EAAa;QACX,yEAAwB;QACtB,oEAAoE;QACtE,4DAAM;QAEN,6EAAqC;QACnC,4EAAU;QACR,4EAAU;QACR,gFAA8C;QAAA,6EAAiB;QAAA,4DAAY;QAC3E,mFACW;QADA,0LAA4B;QAEvC,4DAAY;QACd,4DAAW;QAEX,+EAAyB;QACvB,wEAA8E;QAC5E,kFACF;QAAA,4DAAI;QACN,4DAAW;QAEX,4EAAU;QACR,gFAA8C;QAAA,2EAAU;QAAA,4DAAY;QACpE,qFAAqG;QAA1F,0LAA4B;QACvC,4DAAY;QACd,4DAAW;QAEX,+EAAyB;QACvB,wEAA8E;QAC5E,kFACF;QAAA,4DAAI;QACN,4DAAW;QACb,4DAAW;QAEX,2EAAS;QACP,2EAAS;QACP,kFAAsE;QAA1D,mRAAS,gBAAkB,IAAC;QAA8B,0EAAc;QAAA,4DAAa;QACnG,4DAAU;QACV,2EAAS;QACP,kFAA8D;QAAlD,sIAAS,cAAU,IAAC;QAA8B,uEAAW;QAAA,4DAAa;QACxF,4DAAU;QACZ,4DAAU;QACZ,4DAAO;QAET,4DAAc;;;;QAlCK,2DAA4B;QAA5B,uFAA4B;QAMpC,0DAAgD;QAAhD,wGAAgD;QAOxC,0DAA4B;QAA5B,uFAA4B;QAKpC,0DAAgD;QAAhD,wGAAgD","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.ts","./src/app/pages/login/login.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginPage } from './login';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login';\nimport { LoginPageRoutingModule } from './login-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [\n    LoginPage,\n  ]\n})\nexport class LoginModule { }\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UserData } from '../../providers/user-data';\n\nimport { UserOptions } from '../../interfaces/user-options';\n\n\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  styleUrls: ['./login.scss'],\n})\nexport class LoginPage {\n  login: UserOptions = { username: '', password: '' };\n  submitted = false;\n\n  constructor(\n    public userData: UserData,\n    public router: Router\n  ) { }\n\n  onLogin(form: NgForm) {\n    this.submitted = true;\n\n    if (form.valid) {\n      this.userData.login(this.login.username);\n      this.router.navigateByUrl('/app/tabs/schedule');\n    }\n  }\n\n  onSignup() {\n    this.router.navigateByUrl('/signup');\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n\n    <ion-title>Login</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <div class=\"login-logo\">\n    <img src=\"assets/img/polizaimg/jardin.png\" alt=\"Jardin 20-30 #1043\">\n  </div>\n\n  <form #loginForm=\"ngForm\" novalidate>\n    <ion-list>\n      <ion-item>\n        <ion-label position=\"stacked\" color=\"primary\">Nombre de usuario</ion-label>\n        <ion-input [(ngModel)]=\"login.username\" name=\"username\" type=\"text\" #username=\"ngModel\" spellcheck=\"false\" autocapitalize=\"off\"\n          required>\n        </ion-input>\n      </ion-item>\n\n      <ion-text color=\"danger\">\n        <p [hidden]=\"username.valid || submitted === false\" class=\"ion-padding-start\">\n          Username is required\n        </p>\n      </ion-text>\n\n      <ion-item>\n        <ion-label position=\"stacked\" color=\"primary\">Contrase√±a</ion-label>\n        <ion-input [(ngModel)]=\"login.password\" name=\"password\" type=\"password\" #password=\"ngModel\" required>\n        </ion-input>\n      </ion-item>\n\n      <ion-text color=\"danger\">\n        <p [hidden]=\"password.valid || submitted === false\" class=\"ion-padding-start\">\n          Password is required\n        </p>\n      </ion-text>\n    </ion-list>\n\n    <ion-row>\n      <ion-col>\n        <ion-button (click)=\"onLogin(loginForm)\" type=\"submit\" expand=\"block\">Iniciar sesion</ion-button>\n      </ion-col>\n      <ion-col>\n        <ion-button (click)=\"onSignup()\" color=\"light\" expand=\"block\">Registrarse</ion-button>\n      </ion-col>\n    </ion-row>\n  </form>\n\n</ion-content>\n"],"names":[],"sourceRoot":"webpack:///"}